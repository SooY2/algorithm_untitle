//스티커
/*
1357...
2468... 
순으로 검사하며 0행이면 앞서 저장한 벡터의 마지막인덱스-1 값 제외하고 최대 찾기
                1행이면 앞서 저장한 벡터의 마지막 두 원소 제외하고 최대값 찾기
위 방법도 시간초과...

-> 벡터의 값을 모두 검사해서 최대값을 찾지않아도 됨.
예를 들어 6의 값을 구할때는 위 방법으론 132를 다 검사했지만 2는 이미 3에 포함되어 있기 때문에 3보다 작아서 검사안해도됨.
따라서 0행이면 1행이고 i-1,i-2열을 검사하면 되고, 1행i열이면 0행i-1,i-2열을 검사하면 돼.
*/

#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int v[2][1000000];
int dp[2][1000000];

int main(){
    int t;
    cin>>t;
    while(t--){
        int n,x,y,m;
        cin>>n;
        //vector<vector <int>> v(2,vector<int>(n,0));


        for(int i=0;i<2;i++){
            for(int j=0;j<n;j++){
                cin>>v[i][j];
            }
        }

        dp[0][0]=v[0][0];
        dp[1][0]=v[1][0];

        for(int i=1;i<n;i++){
            dp[0][i]=max(dp[1][i-1],dp[1][i-2])+v[0][i];
            dp[1][i]=max(dp[0][i-1],dp[0][i-2])+v[1][i];
        }
        cout<<max(dp[0][n-1],dp[1][n-1])<<"\n";
    }
    return 0;
}
